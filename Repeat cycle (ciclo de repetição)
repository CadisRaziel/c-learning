using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace CiclosDeRepeticao
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void btn_executar_Click(object sender, EventArgs e)
        {
            //para colocar itens na lista \/ de 1 em 1
            lista.Items.Add(1);
            lista.Items.Add(2);

            //ou podemos fazer asim \/ para colocar varios itens de uma só vez

            //FOR (para)
            // int valor = 0 é uma variavel de controle que é utilizade se deve ou não termina em determinada altura
            // valor <=50 = é onde o ciclo vai terminar(ou vai ser executado em quanto o valor for igual ou menor que 50)
            // valor++ = é para adicionar uma unidade de valor ou seja para que não acabe no "valor <=50" (estudar mais sobre)
            for (int valor = 0; valor <= 50; valor++)

            {
                lista.Items.Add(valor);

            }
            // para aparecer somente numeros impares \/
            for (int valor = 1; valor <= 50; valor+=2)

            {
                lista.Items.Add(valor);

            }
            // para aparecer somente multiplos de 5 \/
            for (int valor = 0; valor <= 50; valor += 5)

            {
                lista.Items.Add(valor);

            }

            //----------------------------------------------

            //WHILE (Enquanto)
            //enquanto tiver uma condição verdadeira dentro do ()
            //o código dentro do {} vai ser executado

            int vezes = 0;
            while (vezes <=100)
            {
                lista.Items.Add(vezes++);
                //vezes++ indica que a lista vai executar 100 vezes a hora que chega no 100 ela para

                               
            }

            //-----------------------------------------------
            //DO "do while" por conta do while (executar ou faz) en quanto while for verdadeira
            int vezes = 0;
            do
            {
                lista.Items.Add(vezes);
                vezes++;
            } while (vezes <= 100);

            //essas são diferentes forma de controlar a execução do código no sentido ciclo

            //------------------------------------------------
            //FOREACH (por cada)
            //ciclo utilizado com muita frequencia 

            //exemplos de string e suas funçoes

            string frase = "Este ciclo é fantastico";
            lista.Items.Add(frases);

            // frases.ToUpper é para deixar todo texto em maiuscula
            // frases.ToUpper "()" é para ativar o ToUpper.
            lista.Items.Add(frases.ToUpper());

            // frases.lenght é para contar o numero de caracteres (ele vai dar o resultado ao invez da frase)
            lista.Items.Add(frases.Lenght);

            //foreach exemplos

            string frase = "este ciclo é fantastico";
            //com esse mecanismo em cada linha vai aparecer 1 caracter
            //exemplo
            //e
            //s
            //t
            //e
            foreach (char c in frase)
            {
                lista.Items.Add(c);
            }

            // exemplo mais complexo que ainda não vi
            // uma coleção de valores do tipo string
            list<string> list_nomes = new list<string>()
            {
                "joao"," vitor", "lala", "francisco", "power", "dudu", "cachorro"
            };

            foreach(string s in lista_nomes)
            {
                lista.Items.Add(s);
            }
            // com isto /\ ele vai mostrar a lista de nomes 
            // joao
            // vitor
            // etc..
        }
    }
}
