using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Arrays
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void btn_executar_Click(object sender, EventArgs e)
        {


            // obs "coleção de valores é passar por todo ele em forma sequencial"
            //ARRAYS
            // é para deficinar coleções
            // é a possibilidade de poder criar uma variavel onde da para por varios valores
            // não da para executar por etapa mas da para executar todos e tambem da para deixar guardado

            // "[]" identificação do array
            // "new" = um novo array[
            // "int" variavel inteira
            int[] valores;
            valores = new int[5];

            valores[0] = 10;
            valores[1] = 20;
            valores[2] = 30;
            valores[3] = 40;
            valores[4] = 50;

            // lembre-se sempre começa no 0
            // exemplo 0 - 1 - 2 - 3 - 4 (o ultimo é 4 e não 5)
            // se eu quiser colocar 5 teria que colocar new int[6]


            int resultado = valores[0] + valores[3];
            lista.Items.Add(resultado);


            //-------------------------------------------------
            // exemplo para diminuir o array
            // este código \/ faz tudo igual o que o de cima faz /\
            int[] valores = new int[] { 10, 20, 30, 40, 50 };
            // não defini o valor em "new int[]" pois eu ja denfini ele em {10,20,30,40,50}
            // ou seja ja defini os 5 valores, começa no 0 1 2 3 4
            // posso adicionar mais valores e, {} sem a necessidade de colocar no []

            //----------------------------------------------------
            // exemplo para apresentar na lista de forma simples

            foreach (int valor in valores)
                lista.Items.Add(valor);

            // para utilizar {} é necessario por quando a mais de uma "lista.Items.Add
            // quando a somente 1 não precisa por como no exempolo acima /\
            //foreach (int valor in valores)
            //{
            //lista.Items.Add(valor);
            //}

            //----------------------------------------------------
            // da tambem para usar o FOR

            for (int indice = 0; indice < 5; indice++)    //incide++ ele executa até o 5
                lista.Items.Add(valores[indice]);

            // lenght = para mostrar todos os arrays ( 10 20 30 40 50 60 etc...)
            for (int indice = 0; indice < valores.Length; indice++)    //incide++ ele executa até o 5
                lista.Items.Add(valores[indice]);



        }
    }
}
